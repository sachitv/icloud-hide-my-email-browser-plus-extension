name: tests
permissions:
  contents: read
  checks: write
  pull-requests: write

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  detect-license-changes:
    if: github.actor != 'attributions-bot'
    runs-on: ubuntu-24.04-arm
    outputs:
      licenses: ${{ steps.filter.outputs.licenses }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            licenses:
              - 'package.json'
              - 'package-lock.json'
              - 'ATTRIBUTIONS.md'
              - 'utils/generateLicenseTable.mjs'
              - 'utils/checkLicenses.mjs'

  format:
    if: github.actor != 'attributions-bot'
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Prettier formatting
        run: |
          npm run prettier:check || {
            echo "::error::Prettier check failed. Please run `npm run prettier` locally.";
            exit 1;
          }
      - name: Biome formatting
        run: |
          npm run biome:format:check || {
            echo "::error::Biome check failed. Please run `npm run biome:format` locally.";
            exit 1;
          }

  lint:
    runs-on: ubuntu-24.04-arm
    needs: format
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Lint
        run: |
          npm run lint:check || {
            echo "::error::Lint check failed. Please run `npm run lint` locally.";
            exit 1;
          }

  validate-pr-title:
    if: github.event_name == 'pull_request' && github.actor != 'attributions-bot'
    runs-on: ubuntu-24.04-arm
    steps:
      - name: semantic-pull-request
        uses: amannn/action-semantic-pull-request@v6.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unit-tests:
    runs-on: ubuntu-24.04-arm
    needs:
      - lint
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Prepare coverage directory
        run: mkdir -p coverage
      - name: Run unit tests with coverage
        run: npm run test:coverage -- --reporter=default --reporter=junit --outputFile=coverage/junit.xml
      - name: Publish test report
        if: always()
        uses: dorny/test-reporter@v2
        with:
          name: vitest
          path: coverage/junit.xml
          reporter: jest-junit
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: coverage-report
          path: coverage
      - name: Codecov
        uses: codecov/codecov-action@v5
        if: github.event_name == 'push' || github.event.pull_request.head.repo.fork == false
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-brave:
    runs-on: ubuntu-24.04-arm
    needs: unit-tests
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Package Brave bundle
        run: |
          npm run package:brave
          ZIP_WITH_VERSION=$(find build -maxdepth 1 -name 'icloud-hide-my-email-plus-browser-extension-*-brave.zip' -print -quit)
          if [ -z "$ZIP_WITH_VERSION" ]; then
            echo "::error::Unable to find Brave package output";
            exit 1;
          fi
          mv "$ZIP_WITH_VERSION" build/icloud-hide-my-email-plus-browser-extension-brave.zip
      - name: Upload Brave artifact
        uses: actions/upload-artifact@v5
        with:
          name: icloud-hide-my-email-plus-browser-extension-brave
          path: build/icloud-hide-my-email-plus-browser-extension-brave.zip

  build-chrome:
    runs-on: ubuntu-24.04-arm
    needs: unit-tests
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Package Chrome bundle
        run: |
          npm run package:chrome
          ZIP_WITH_VERSION=$(find build -maxdepth 1 -name 'icloud-hide-my-email-plus-browser-extension-*-chrome.zip' -print -quit)
          if [ -z "$ZIP_WITH_VERSION" ]; then
            echo "::error::Unable to find Chrome package output";
            exit 1;
          fi
          mv "$ZIP_WITH_VERSION" build/icloud-hide-my-email-plus-browser-extension-chrome.zip
      - name: Upload Chrome artifact
        uses: actions/upload-artifact@v5
        with:
          name: icloud-hide-my-email-plus-browser-extension-chrome
          path: build/icloud-hide-my-email-plus-browser-extension-chrome.zip

  build-edge:
    runs-on: ubuntu-24.04-arm
    needs: unit-tests
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Package Edge bundle
        run: |
          npm run package:edge
          ZIP_WITH_VERSION=$(find build -maxdepth 1 -name 'icloud-hide-my-email-plus-browser-extension-*-edge.zip' -print -quit)
          if [ -z "$ZIP_WITH_VERSION" ]; then
            echo "::error::Unable to find Edge package output";
            exit 1;
          fi
          mv "$ZIP_WITH_VERSION" build/icloud-hide-my-email-plus-browser-extension-edge.zip
      - name: Upload Edge artifact
        uses: actions/upload-artifact@v5
        with:
          name: icloud-hide-my-email-plus-browser-extension-edge
          path: build/icloud-hide-my-email-plus-browser-extension-edge.zip

  build-firefox:
    runs-on: ubuntu-24.04-arm
    needs: unit-tests
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Package Firefox bundle
        run: |
          npm run package:firefox
          ZIP_WITH_VERSION=$(find build -maxdepth 1 -name 'icloud-hide-my-email-plus-browser-extension-*-firefox.zip' -print -quit)
          if [ -z "$ZIP_WITH_VERSION" ]; then
            echo "::error::Unable to find Firefox package output";
            exit 1;
          fi
          mv "$ZIP_WITH_VERSION" build/icloud-hide-my-email-plus-browser-extension-firefox.zip
      - name: Lint Firefox bundle
        run: npx web-ext lint --source-dir build/firefox-mv3
      - name: Upload Firefox artifact
        uses: actions/upload-artifact@v5
        with:
          name: icloud-hide-my-email-plus-browser-extension-firefox
          path: build/icloud-hide-my-email-plus-browser-extension-firefox.zip

  license-audit:
    needs: detect-license-changes
    if: needs.detect-license-changes.outputs.licenses == 'true'
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - name: Install npm deps
        run: npm ci
      - name: Check dependency licenses
        run: npm run check:licenses -- --verbose
